[{"D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\index.js":"1","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\App.js":"2","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\reportWebVitals.js":"3","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\view\\Detail.js":"4","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\view\\Home.js":"5","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\component\\weathercard.js":"6","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\api\\Api.js":"7","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\utill\\filter.js":"8"},{"size":517,"mtime":1606966757612,"results":"9","hashOfConfig":"10"},{"size":544,"mtime":1609991184966,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1606966757613,"results":"12","hashOfConfig":"10"},{"size":5043,"mtime":1611198172945,"results":"13","hashOfConfig":"10"},{"size":5677,"mtime":1611203567713,"results":"14","hashOfConfig":"10"},{"size":4553,"mtime":1611202360437,"results":"15","hashOfConfig":"10"},{"size":5534,"mtime":1611202544145,"results":"16","hashOfConfig":"10"},{"size":7954,"mtime":1611203776425,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1a1g6ni",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\index.js",[],["37","38"],"D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\App.js",[],"D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\reportWebVitals.js",[],"D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\view\\Detail.js",["39","40","41","42"],"import React, {useState, useEffect} from 'react';\r\nimport {Line} from '@reactchartjs/react-chart.js'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Detail = (props) => {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        setData(props.location.state.props.data)\r\n    }, [])\r\n\r\n    const exampleData = {\r\n        labels: [\"Saat Ini\", \"+06.00\",\"+12.00\",\"+18.00\",\"+24.00\"],\r\n        datasets: [\r\n            {\r\n                label: 'Suhu dalam Celcius',\r\n                data: data.temps,\r\n                fill: true,\r\n                backgroundColor: 'rgba(132, 99, 255, 0.3)',\r\n            },\r\n        ],\r\n    }\r\n\r\n    const options = {\r\n        legend: {\r\n            display: false\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                   display: false\r\n                }\r\n             }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    display: false\r\n                },\r\n                ticks: {\r\n                    min: 10,\r\n                }\r\n            }]\r\n        },\r\n        plugins: {\r\n            datalabels: {\r\n                display: true,\r\n                color: 'black'\r\n             }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"py-4 bg-light\">\r\n            <div className=\"container p-3 border rounded shadow-sm bg-white\">\r\n                <p><Link to={{\r\n                        pathname: `/`,\r\n                    }}>&larr; back to home</Link>\r\n                </p>\r\n                <h3 className=\"py-1 text-center my-3\">{data.description}, {data.domain}</h3>\r\n                <div className=\"container p-2\">\r\n                    <div class=\"row ml-0 justify-content-center\">\r\n                        <div className=\"col-3 px-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                                <div className=\"mx-1\">\r\n                                    <img height=\"36px\" width=\"36px\" src={process.env.PUBLIC_URL + '/humidity.png'}/>\r\n                                </div>\r\n                                <div className=\"mx-1\">\r\n                                    <div>Humidity</div>\r\n                                    <div>{data.curHumidity}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-2\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className=\"mx-1\">\r\n                                    <img height=\"36px\" width=\"36px\" src={process.env.PUBLIC_URL + '/wind.png'}/>\r\n                                </div>\r\n                                <div className=\"mx-1\">\r\n                                    <div className=\"text-secondary\">Kec. Angin</div>\r\n                                    <div>{data.curWindSpeed}&nbsp;{data.curWindDir.dir}&nbsp;<img alt=\"compas dir\"\r\n                                                                   style={{transform: \"rotate(\" + data.curWindDir.deg + \"deg)\"}}\r\n                                                                   height=\"16px\" width=\"16px\"\r\n                                                                   src={process.env.PUBLIC_URL + '/compass.png'}/></div>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"col-3 px-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                                <div className=\"mx-1\">\r\n                                    <img height=\"36px\" width=\"36px\" src={process.env.PUBLIC_URL + '/thermometer.png'}/>\r\n                                </div>\r\n                                <div className=\"mx-1\">\r\n                                    <div>Max Temp</div>\r\n                                    <div>{data.maxTemps}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3 px-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                                <div className=\"mx-1\">\r\n                                    <img height=\"36px\" width=\"36px\" src={process.env.PUBLIC_URL + '/thermometer.png'}/>\r\n                                </div>\r\n                                <div className=\"mx-1\">\r\n                                    <div>Min Temp</div>\r\n                                    <div>{data.minTemps}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <p>{JSON.stringify(data)}</p> */}\r\n                <div className=\"container\">\r\n                    <Line data={exampleData} options={options}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Detail;","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\view\\Home.js",["43","44"],"D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\component\\weathercard.js",[],"D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\api\\Api.js",["45"],"import axios from \"axios\";\r\nimport {places} from \"../utill/filter\";\r\n\r\n\r\nconst fieldNameMapper = (value, index) => {\r\n    let currDomain = value.getAttribute(\"domain\");\r\n    if(!currDomain.includes(\"Pelabuhan\") && currDomain != \"\" && !currDomain.includes(\"isata\")){\r\n        let curHumidity = value.getElementsByTagName(\"parameter\")[0].getElementsByTagName(\"timerange\")[index].getElementsByTagName(\"value\")[0].childNodes[0].nodeValue;\r\n        let curTemp = parseInt(value.getElementsByTagName(\"parameter\")[5].getElementsByTagName(\"timerange\")[index].getElementsByTagName(\"value\")[0].childNodes[0].nodeValue);\r\n        let curWindDir = {\r\n            deg: value.getElementsByTagName(\"parameter\")[7].getElementsByTagName(\"timerange\")[index].getElementsByTagName(\"value\")[0].childNodes[0].nodeValue,\r\n            dir: value.getElementsByTagName(\"parameter\")[7].getElementsByTagName(\"timerange\")[index].getElementsByTagName(\"value\")[1].childNodes[0].nodeValue\r\n        }\r\n    \r\n        let curWindSpeed = parseInt(value.getElementsByTagName(\"parameter\")[8].getElementsByTagName(\"timerange\")[index].getElementsByTagName(\"value\")[0].childNodes[0].nodeValue);\r\n        let curWeather = parseInt(value.getElementsByTagName(\"parameter\")[6].getElementsByTagName(\"timerange\")[index].getElementsByTagName(\"value\")[0].childNodes[0].nodeValue);\r\n        let humids = [];\r\n        let humid = value.getElementsByTagName(\"parameter\")[0].getElementsByTagName(\"timerange\")\r\n        let temps = [];\r\n        let temp = value.getElementsByTagName(\"parameter\")[5].getElementsByTagName(\"timerange\")\r\n        for (let item of humid) {\r\n            humids.push(item.getElementsByTagName(\"value\")[0].childNodes[0].nodeValue)\r\n        }\r\n        let weathers = [];\r\n        let weather = value.getElementsByTagName(\"parameter\")[6].getElementsByTagName(\"timerange\")\r\n        for (let item of weather) {\r\n            weathers.push(parseInt(item.getElementsByTagName(\"value\")[0].childNodes[0].nodeValue))\r\n        }\r\n        for (let item of temp) {\r\n            temps.push(item.getElementsByTagName(\"value\")[0].childNodes[0].nodeValue)\r\n        }\r\n        let windSpeeds = [];\r\n        let windSpeed = value.getElementsByTagName(\"parameter\")[8].getElementsByTagName(\"timerange\")\r\n        for (let item of windSpeed) {\r\n            windSpeeds.push(item.getElementsByTagName(\"value\")[2].childNodes[0].nodeValue)\r\n        }\r\n        let windDirs = [];\r\n        let windDir = value.getElementsByTagName(\"parameter\")[7].getElementsByTagName(\"timerange\")\r\n        for (let item of windDir) {\r\n            let obj =\r\n                {\r\n                    deg: item.getElementsByTagName(\"value\")[0].childNodes[0].nodeValue,\r\n                    dir: item.getElementsByTagName(\"value\")[1].childNodes[0].nodeValue,\r\n                }\r\n            windDirs.push(obj)\r\n        }\r\n        let maxTemps = parseInt(value.getElementsByTagName(\"parameter\")[2].getElementsByTagName(\"value\")[0].childNodes[0].nodeValue);\r\n        let minTemps = parseInt(value.getElementsByTagName(\"parameter\")[4].getElementsByTagName(\"value\")[0].childNodes[0].nodeValue);\r\n    \r\n        return (\r\n            {\r\n                description: value.getElementsByTagName(\"name\")[0].childNodes[0].nodeValue,\r\n                domain: value.getAttribute(\"domain\"),\r\n                curHumidity,\r\n                curTemp,\r\n                curWindDir,\r\n                curWindSpeed,\r\n                humids,\r\n                temps,\r\n                windSpeeds,\r\n                windDirs,\r\n                curWeather,\r\n                weathers,\r\n                index,\r\n                maxTemps,\r\n                minTemps\r\n            }\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            {\r\n            description: \"error\",\r\n            domain: \"error\",\r\n            curHumidity: \"error\",\r\n            curTemp: \"error\",\r\n            curWindDir: \"error\",\r\n            curWindSpeed: \"error\",\r\n            humids: \"error\",\r\n            temps: \"error\",\r\n            windSpeeds: \"error\",\r\n            windDirs: \"error\",\r\n            curWeather: \"error\",\r\n            weathers: \"error\",\r\n            index: \"error\",\r\n            maxTemps: \"error\",\r\n            minTemps: \"error\"\r\n            }\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst getDataByPlaceXML = (keyword) => {\r\n    let arrData = places.filter(item => {\r\n        return item.place === keyword\r\n    })\r\n\r\n    let {url} = arrData[0];\r\n    return axios.get(`https://data.bmkg.go.id/datamkg/MEWS/DigitalForecast/${url}`).then(res => {\r\n        let xmlData = res.data;\r\n        let domParser = new DOMParser();\r\n        let xmlDom = domParser.parseFromString(xmlData, \"text/xml\")\r\n        //increment +2 untuk nama dalam bahasa indonesia\r\n        // bahasa indonesia mulai dari 1 , english dari 0\r\n        let result = [];\r\n        let area = xmlDom.getElementsByTagName(\"area\")\r\n        let date = {\r\n            hour: xmlDom.getElementsByTagName(\"issue\")[0].getElementsByTagName(\"hour\")[0].childNodes[0].nodeValue,\r\n            minute: xmlDom.getElementsByTagName(\"issue\")[0].getElementsByTagName(\"minute\")[0].childNodes[0].nodeValue\r\n        }\r\n        let today = new Date();\r\n        let jam = [0, 6, 12, 18, 24]\r\n        jam = jam.map(item => {\r\n            return Math.abs((today.getHours() - date.hour) - item)\r\n        })\r\n        let idx = jam.indexOf(Math.min.apply(Math, jam))\r\n        for (let item of area) {\r\n            result.push(fieldNameMapper(item, idx))\r\n        }\r\n        return result;\r\n\r\n    })\r\n}\r\n\r\n\r\nexport {getDataByPlaceXML}","D:\\Tugas Kuliah\\Smt 7\\Layanan Berbasis Web\\Project\\payungku\\src\\utill\\filter.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":9,"column":8,"nodeType":"52","endLine":9,"endColumn":10,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":63,"column":37,"nodeType":"56","endLine":63,"endColumn":117},{"ruleId":"54","severity":1,"message":"55","line":88,"column":37,"nodeType":"56","endLine":88,"endColumn":120},{"ruleId":"54","severity":1,"message":"55","line":99,"column":37,"nodeType":"56","endLine":99,"endColumn":120},{"ruleId":"57","severity":1,"message":"58","line":114,"column":36,"nodeType":"59","messageId":"60","endLine":114,"endColumn":38},{"ruleId":"61","severity":1,"message":"62","line":115,"column":48,"nodeType":"63","messageId":"64","endLine":115,"endColumn":50},{"ruleId":"61","severity":1,"message":"62","line":7,"column":56,"nodeType":"63","messageId":"64","endLine":7,"endColumn":58},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state.props.data'. Either include it or remove the dependency array. If 'setData' needs the current value of 'props.location.state.props.data', you can also switch to useReducer instead of useState and read 'props.location.state.props.data' in the reducer.","ArrayExpression",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [props.location.state.props.data]",{"range":"70","text":"71"},[296,298],"[props.location.state.props.data]"]